{"version":3,"sources":["component/AddCategoria.js","component/GifGridItem.js","helpers/getGifs.js","component/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategoria","setcategoria","useState","inputvalue","setinputvalue","onSubmit","e","preventDefault","trim","length","categoria","type","name","onChange","target","value","prototype","PropTypes","func","isRequired","string","GifGridItem","title","url","className","src","alt","getGifs","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loanding","state","setstate","useEffect","then","useFetchGifs","imagenes","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"yPAGMA,EAAe,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAAkB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAgBrC,OACI,0BAAMC,SATc,SAACC,GACrBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAS,OAAKP,GAAL,mBAAoBO,OAC3CN,EAAc,OAOlB,2BAAOO,KAAK,OAAOC,KAAK,YAAYC,SAflB,SAACP,GACnBF,EAAcE,EAAEQ,OAAOC,QAcsCA,MAAOZ,MAM5EH,EAAagB,UAAY,CACrBf,aAAegB,IAAUC,KAAKC,WAC9BhB,WAAac,IAAUG,OAAOD,YAGnBnB,QCnBAqB,EAVK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEzB,OACI,yBAAKC,UAAU,QACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCWDK,EAlBD,uCAAG,WAAOjB,GAAP,uBAAAkB,EAAA,6DACPL,EADO,0FACmFM,UAAUnB,GAD7F,qBAGMoB,MAAMP,GAHZ,cAGPQ,EAHO,gBAIQA,EAAKC,OAJb,uBAINC,EAJM,EAINA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXC,IAAKa,EAAIE,OAAOC,iBAAiBhB,QAV5B,kBAcNW,GAdM,4CAAH,sDCwBCM,EAtBC,SAAC,GAAiB,IAAhB9B,EAAe,EAAfA,UAAe,ECDL,SAACA,GAAe,IAAD,EAEbR,mBAAS,CAC/BuC,UAAW,EACXR,KAAM,KAJ6B,mBAEhCS,EAFgC,KAEzBC,EAFyB,KAevC,OARAC,qBAAU,WACNjB,EAAQjB,GACPmC,MAAM,SAAAT,GAAG,OAAIO,EAAS,CACnBF,UAAU,EACVR,KAAMG,SAEZ,CAAE1B,IAEGgC,EDZ2BI,CAAapC,GAAxC+B,EAFsB,EAEtBA,SAAeM,EAFO,EAEZd,KAEjB,OACI,oCACA,4BAAKvB,GACH+B,GAAW,cACb,yBAAKjB,UAAU,aAEPuB,EAASZ,KAAK,SAAAC,GAAG,OACjB,kBAAC,EAAD,eAAaY,IAAKZ,EAAIC,IAClBD,UEWLa,EArBM,WAAO,IAAD,EAEW/C,mBAAS,CAAC,gBAFrB,mBAEhBQ,EAFgB,KAELT,EAFK,KAIvB,OACI,oCACA,4CACA,kBAAC,EAAD,CAAcA,aAAgBA,IAC9B,6BAEQS,EAAUyB,KAAI,SAAAzB,GAAS,OACnB,kBAAC,EAAD,CAASsC,IAAKtC,EAAWA,UAAaA,SCX1DwC,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.0b4b7d47.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategoria = ({setcategoria}) => {\n\n    const [inputvalue, setinputvalue] = useState('');\n\n    const hanlendChange = (e) => {\n        setinputvalue(e.target.value);\n    }\n\n    const enviarCategoria = (e) => {\n        e.preventDefault();\n        if(inputvalue.trim().length > 2){\n            setcategoria( categoria => [inputvalue, ...categoria]);\n            setinputvalue('');\n        }\n    }\n\n    return(\n        <form onSubmit={enviarCategoria}>\n\n        <input type='text' name='categoria' onChange={hanlendChange} value={inputvalue} />\n        \n        </form>\n    );\n}\n\nAddCategoria.prototype = {\n    setcategoria : PropTypes.func.isRequired,\n    inputvalue : PropTypes.string.isRequired\n}\n\nexport default AddCategoria;","import React from 'react';\n\n\n\nconst GifGridItem = ({title, url}) => {\n\n    return(\n        <div className='card'>\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    );\n}\n\nexport default GifGridItem;","\n\n const getGifs = async (categoria) => {\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=eAiOFL00Pvq6hNLFwmLVzczfhDbnrO4e&q=${ encodeURI(categoria) }&limit=2`;\n\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n    });\n    \n    return gifs;\n}\n\n\nexport default getGifs;","import React from 'react';\nimport GifGridItem from './GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nconst GifGrid = ({categoria}) => {\n\n    const {loanding, data:imagenes} = useFetchGifs(categoria);\n\n    return(\n        <>\n        <h4>{categoria}</h4>\n        { loanding&& 'cargando...'}\n        <div className='card-grid'>\n            {\n                imagenes.map( img => (\n                <GifGridItem key={img.id} \n                {...img}\n                />\n                ))\n            }\n        </div>\n        </>\n    );\n}\n\n\nexport default GifGrid;","import { useState, useEffect } from \"react\"\nimport  getGifs  from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (categoria) => {\n\n    const [state, setstate] = useState({\n        loanding : true,\n        data: []\n    });\n\n    useEffect(() => {\n        getGifs(categoria)\n        .then( img => setstate({\n            loanding: false,\n            data: img\n        }));\n    },[ categoria ]);\n\n    return state;\n} ","import React, {useState} from 'react';\nimport AddCategoria from './component/AddCategoria';\nimport GifGrid from './component/GifGrid';\n\n\n\nconst GifExpertApp = () => {\n\n    const [categoria, setcategoria] = useState(['dragon ball']);\n\n    return(\n        <>\n        <h3>GifExpertApp</h3>\n        <AddCategoria setcategoria = {setcategoria} />\n        <hr />\n            {\n                categoria.map(categoria => ( \n                    <GifGrid key={categoria} categoria = {categoria} />\n                ))\n            }\n        </>\n    )\n\n} \n\n\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}